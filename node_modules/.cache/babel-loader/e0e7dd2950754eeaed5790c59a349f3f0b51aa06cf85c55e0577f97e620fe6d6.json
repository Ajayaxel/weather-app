{"ast":null,"code":"var _jsxFileName = \"C:\\\\wetaher_app\\\\my-app\\\\src\\\\Context\\\\index.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useContext, createContext, useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StateContext = /*#__PURE__*/createContext();\nexport const StateContextProvider = ({\n  children\n}) => {\n  _s();\n  const [weather, setWeather] = useState({});\n  const [values, setValues] = useState([]);\n  const [place, setPlace] = useState('Jaipur');\n  const [thisLocation, setLocation] = useState('');\n\n  // fetch api\n  const fetchWeather = async () => {\n    const options = {\n      method: 'GET',\n      url: 'https://visual-crossing-weather.p.rapidapi.com/forecast',\n      params: {\n        aggregateHours: '24',\n        location: place,\n        contentType: 'json',\n        unitGroup: 'metric',\n        shortColumnNames: 0\n      },\n      headers: {\n        'X-RapidAPI-Key': import.meta.env.VITE_API_KEY,\n        'X-RapidAPI-Host': 'visual-crossing-weather.p.rapidapi.com'\n      }\n    };\n    try {\n      const response = await axios.request(options);\n      console.log(response.data);\n      const thisData = Object.values(response.data.locations)[0];\n      setLocation(thisData.address);\n      setValues(thisData.values);\n      setWeather(thisData.values[0]);\n    } catch (e) {\n      console.error(e);\n      // if the api throws error.\n      alert('This place does not exist');\n    }\n  };\n  useEffect(() => {\n    fetchWeather();\n  }, [place]);\n  useEffect(() => {\n    console.log(values);\n  }, [values]);\n  return /*#__PURE__*/_jsxDEV(StateContext.Provider, {\n    value: {\n      weather,\n      setPlace,\n      values,\n      thisLocation,\n      place\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(StateContextProvider, \"QIP8TfJS6/WLTTj2wuyPaON862o=\");\n_c = StateContextProvider;\nexport const useStateContext = () => {\n  _s2();\n  return useContext(StateContext);\n};\n_s2(useStateContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"StateContextProvider\");","map":{"version":3,"names":["useContext","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","StateContext","StateContextProvider","children","_s","weather","setWeather","values","setValues","place","setPlace","thisLocation","setLocation","fetchWeather","options","method","url","params","aggregateHours","location","contentType","unitGroup","shortColumnNames","headers","import","meta","env","VITE_API_KEY","response","request","console","log","data","thisData","Object","locations","address","e","error","alert","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useStateContext","_s2","$RefreshReg$"],"sources":["C:/wetaher_app/my-app/src/Context/index.jsx"],"sourcesContent":["import { useContext, createContext, useState, useEffect } from \"react\";\nimport axios from 'axios'\n\nconst StateContext = createContext()\n\nexport const StateContextProvider = ({ children }) => {\n    const [weather, setWeather] = useState({})\n    const [values, setValues] = useState([])\n    const [place, setPlace] = useState('Jaipur')\n    const [thisLocation, setLocation] = useState('')\n\n    // fetch api\n    const fetchWeather = async () => {\n        const options = {\n            method: 'GET',\n            url: 'https://visual-crossing-weather.p.rapidapi.com/forecast',\n            params: {\n                aggregateHours: '24',\n                location: place,\n                contentType: 'json',\n                unitGroup: 'metric',\n                shortColumnNames: 0,\n            },\n            headers: {\n                'X-RapidAPI-Key': import.meta.env.VITE_API_KEY,\n                'X-RapidAPI-Host': 'visual-crossing-weather.p.rapidapi.com'\n            }\n        }\n\n        try {\n            const response = await axios.request(options);\n            console.log(response.data)\n            const thisData = Object.values(response.data.locations)[0]\n            setLocation(thisData.address)\n            setValues(thisData.values)\n            setWeather(thisData.values[0])\n        } catch (e) {\n            console.error(e);\n            // if the api throws error.\n            alert('This place does not exist')\n        }\n    }\n\n    useEffect(() => {\n        fetchWeather()\n    }, [place])\n\n    useEffect(() => {\n        console.log(values)\n    }, [values])\n\n    return (\n        <StateContext.Provider value={{\n            weather,\n            setPlace,\n            values,\n            thisLocation,\n            place\n        }}>\n            {children}\n        </StateContext.Provider>\n    )\n}\n\nexport const useStateContext = () => useContext(StateContext)"],"mappings":";;;AAAA,SAASA,UAAU,EAAEC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACtE,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,oBAAoB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,QAAQ,CAAC;EAC5C,MAAM,CAACe,YAAY,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAMiB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,OAAO,GAAG;MACZC,MAAM,EAAE,KAAK;MACbC,GAAG,EAAE,yDAAyD;MAC9DC,MAAM,EAAE;QACJC,cAAc,EAAE,IAAI;QACpBC,QAAQ,EAAEV,KAAK;QACfW,WAAW,EAAE,MAAM;QACnBC,SAAS,EAAE,QAAQ;QACnBC,gBAAgB,EAAE;MACtB,CAAC;MACDC,OAAO,EAAE;QACL,gBAAgB,EAAEC,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,YAAY;QAC9C,iBAAiB,EAAE;MACvB;IACJ,CAAC;IAED,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAM9B,KAAK,CAAC+B,OAAO,CAACf,OAAO,CAAC;MAC7CgB,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;MAC1B,MAAMC,QAAQ,GAAGC,MAAM,CAAC3B,MAAM,CAACqB,QAAQ,CAACI,IAAI,CAACG,SAAS,CAAC,CAAC,CAAC,CAAC;MAC1DvB,WAAW,CAACqB,QAAQ,CAACG,OAAO,CAAC;MAC7B5B,SAAS,CAACyB,QAAQ,CAAC1B,MAAM,CAAC;MAC1BD,UAAU,CAAC2B,QAAQ,CAAC1B,MAAM,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,OAAO8B,CAAC,EAAE;MACRP,OAAO,CAACQ,KAAK,CAACD,CAAC,CAAC;MAChB;MACAE,KAAK,CAAC,2BAA2B,CAAC;IACtC;EACJ,CAAC;EAED1C,SAAS,CAAC,MAAM;IACZgB,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAEXZ,SAAS,CAAC,MAAM;IACZiC,OAAO,CAACC,GAAG,CAACxB,MAAM,CAAC;EACvB,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAEZ,oBACIP,OAAA,CAACC,YAAY,CAACuC,QAAQ;IAACC,KAAK,EAAE;MAC1BpC,OAAO;MACPK,QAAQ;MACRH,MAAM;MACNI,YAAY;MACZF;IACJ,CAAE;IAAAN,QAAA,EACGA;EAAQ;IAAAuC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEhC,CAAC;AAAAzC,EAAA,CAzDYF,oBAAoB;AAAA4C,EAAA,GAApB5C,oBAAoB;AA2DjC,OAAO,MAAM6C,eAAe,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMtD,UAAU,CAACO,YAAY,CAAC;AAAA;AAAA+C,GAAA,CAAhDD,eAAe;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}